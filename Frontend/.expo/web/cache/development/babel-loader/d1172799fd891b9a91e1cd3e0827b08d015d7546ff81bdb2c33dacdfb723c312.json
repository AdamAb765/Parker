{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useRef, useState } from 'react';\nimport MapView, { Callout } from 'react-native-maps';\nimport { Marker } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Location from 'expo-location';\nimport View from \"react-native-web/dist/exports/View\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Stack, TextInput, IconButton } from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function MapBox(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    myLocation = _useState2[0],\n    setMyLocation = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchInput = _useState4[0],\n    setSearchInput = _useState4[1];\n  var _useState5 = useState([{\n      title: \"Parking 1\",\n      description: \"20ILS per hour\",\n      coordinate: {\n        latitude: 31.970186,\n        longitude: 34.770633,\n        latitudeDelta: 0.01,\n        longitudeDelta: 0.01\n      }\n    }, {\n      title: \"Parking 2\",\n      description: \"15ILS per hour\",\n      coordinate: {\n        latitude: 31.970040,\n        longitude: 34.773360,\n        latitudeDelta: 0.01,\n        longitudeDelta: 0.01\n      }\n    }]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    markers = _useState6[0],\n    setMarkers = _useState6[1];\n  var mapRef = useRef(null);\n  var getMyLocation = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== 'granted') {\n        return;\n      }\n      var location = yield Location.getCurrentPositionAsync({\n        accuracy: Location.Accuracy.Balanced,\n        enableHighAccuracy: true,\n        timeInterval: 5\n      });\n      setMyLocation(location);\n      return location;\n    });\n    return function getMyLocation() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var goToMyLocation = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      location = yield getMyLocation();\n      if (location && mapRef.current) {\n        mapRef.current.animateToRegion({\n          latitude: location.coords.latitude,\n          longitude: location.coords.longitude,\n          latitudeDelta: 0.01,\n          longitudeDelta: 0.01\n        });\n      }\n    });\n    return function goToMyLocation() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      yield goToMyLocation();\n    })();\n  }, []);\n  useEffect(function () {\n    if (myLocation && myLocation.coords.latitude && myLocation.coords.longitude) {\n      setMarkers([].concat(_toConsumableArray(markers), [{\n        title: \"Parking 3\",\n        description: \"15ILS per hour\",\n        coordinate: {\n          latitude: myLocation.coords.latitude,\n          longitude: myLocation.coords.longitude,\n          latitudeDelta: 0.01,\n          longitudeDelta: 0.01\n        }\n      }]));\n    }\n  }, [myLocation]);\n  var updateLocation = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var searchInputResult = yield axios.get(\"https://maps.googleapis.com/maps/api/geocode/json?&address=\" + searchInput + \"&key=AIzaSyCZ-6i7NFhGDzMJl1546n-2EI0laWUc2Hc\");\n      var firstSearchResult = searchInputResult.data.results[0];\n      if (firstSearchResult && firstSearchResult.geometry) {\n        mapRef.current.animateToRegion({\n          latitude: firstSearchResult.geometry.location.lat,\n          longitude: firstSearchResult.geometry.location.lng,\n          latitudeDelta: 0.01,\n          longitudeDelta: 0.01\n        });\n      } else {\n        Alert.alert(\"Whoops!\", \"This address doesn't exist. Are you sure it's correct?\");\n      }\n    });\n    return function updateLocation() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return _jsxs(_Fragment, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Where would you like to park?\",\n      variant: \"outlined\",\n      style: styles.searchInput,\n      onChangeText: function onChangeText(newText) {\n        return setSearchInput(newText);\n      },\n      trailing: function trailing(props) {\n        return _jsx(IconButton, _objectSpread({\n          onPress: updateLocation,\n          icon: function icon(props) {\n            return _jsx(Icon, _objectSpread({\n              name: \"eye\"\n            }, props));\n          }\n        }, props));\n      }\n    }), _jsx(MapView, {\n      ref: mapRef,\n      style: styles.map,\n      provider: \"google\",\n      showsUserLocation: true,\n      showsMyLocationButton: true,\n      children: markers.map(function (marker, index) {\n        return _jsx(Marker, {\n          coordinate: marker.coordinate,\n          icon: require(\"../../assets/ParkingPin.png\"),\n          children: _jsx(Callout, {\n            onPress: function onPress() {\n              return navigation.navigate('Parking', _objectSpread({}, marker));\n            },\n            children: _jsxs(View, {\n              children: [_jsx(Text, {\n                children: marker.title\n              }), _jsx(Text, {\n                children: marker.description\n              })]\n            })\n          })\n        }, index);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  map: {\n    width: '100%',\n    height: '80%'\n  },\n  searchInput: {\n    width: '80%',\n    height: '10%'\n  }\n});","map":{"version":3,"names":["React","useEffect","useRef","useState","MapView","Callout","Marker","StyleSheet","Image","Text","TouchableOpacity","Alert","Location","View","createNativeStackNavigator","Stack","TextInput","IconButton","Icon","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MapBox","_ref","navigation","_useState","_useState2","_slicedToArray","myLocation","setMyLocation","_useState3","_useState4","searchInput","setSearchInput","_useState5","title","description","coordinate","latitude","longitude","latitudeDelta","longitudeDelta","_useState6","markers","setMarkers","mapRef","getMyLocation","_ref2","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","location","getCurrentPositionAsync","accuracy","Accuracy","Balanced","enableHighAccuracy","timeInterval","apply","arguments","goToMyLocation","_ref3","current","animateToRegion","coords","concat","_toConsumableArray","updateLocation","_ref5","searchInputResult","get","firstSearchResult","data","results","geometry","lat","lng","alert","children","placeholder","variant","style","styles","onChangeText","newText","trailing","props","_objectSpread","onPress","icon","name","ref","map","provider","showsUserLocation","showsMyLocationButton","marker","index","require","navigate","create","width","height"],"sources":["C:/projects/git-workspace/Parker/Frontend/src/components/MapBox.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport MapView, { Callout } from 'react-native-maps';\r\nimport { Marker } from 'react-native-maps';\r\nimport { StyleSheet, Image, Text, TouchableOpacity, Alert } from 'react-native';\r\nimport * as Location from 'expo-location'\r\nimport { View } from 'react-native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { Stack, TextInput, IconButton } from \"@react-native-material/core\";\r\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport axios from 'axios';\r\n\r\nexport default function MapBox({ navigation }) {\r\n  const [myLocation, setMyLocation] = useState(null);\r\n  const [searchInput, setSearchInput] = useState(null)\r\n\r\n  const [markers, setMarkers] = useState([{ // Places around the michlala\r\n    title: \"Parking 1\",\r\n    description: \"20ILS per hour\",\r\n    coordinate: {\r\n      latitude: 31.970186,\r\n      longitude: 34.770633,\r\n      latitudeDelta: 0.01,\r\n      longitudeDelta: 0.01\r\n    }\r\n  }, {\r\n    title: \"Parking 2\",\r\n    description: \"15ILS per hour\",\r\n    coordinate: {\r\n      latitude: 31.970040,\r\n      longitude: 34.773360,\r\n      latitudeDelta: 0.01,\r\n      longitudeDelta: 0.01\r\n    }\r\n  }, ])\r\n  const mapRef = useRef(null);\r\n\r\n  const getMyLocation = async () => {\r\n    let { status } = await Location.requestForegroundPermissionsAsync();\r\n    if (status !== 'granted') {\r\n      return;\r\n    }\r\n\r\n    let location = await Location.getCurrentPositionAsync({\r\n      accuracy: Location.Accuracy.Balanced,\r\n      enableHighAccuracy: true,\r\n      timeInterval: 5\r\n    });\r\n\r\n    setMyLocation(location);\r\n    return location\r\n  };\r\n\r\n  const goToMyLocation = async () => {\r\n    location = await getMyLocation();\r\n    if (location && mapRef.current) {\r\n      mapRef.current.animateToRegion({\r\n        latitude: location.coords.latitude,\r\n        longitude: location.coords.longitude,\r\n        latitudeDelta: 0.01,\r\n        longitudeDelta: 0.01\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await goToMyLocation();\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (myLocation && myLocation.coords.latitude && myLocation.coords.longitude) {\r\n      setMarkers([...markers, {\r\n        title: \"Parking 3\",\r\n        description: \"15ILS per hour\",\r\n        coordinate: {\r\n          latitude: myLocation.coords.latitude,\r\n          longitude: myLocation.coords.longitude,\r\n          latitudeDelta: 0.01,\r\n          longitudeDelta: 0.01\r\n        }\r\n      }])\r\n    }\r\n  }, [myLocation])\r\n\r\n  const updateLocation = async () => {\r\n    const searchInputResult = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?&address=${searchInput}&key=AIzaSyCZ-6i7NFhGDzMJl1546n-2EI0laWUc2Hc`)\r\n    const firstSearchResult = searchInputResult.data.results[0]\r\n\r\n    if (firstSearchResult && firstSearchResult.geometry) {\r\n      mapRef.current.animateToRegion({\r\n        latitude: firstSearchResult.geometry.location.lat,\r\n        longitude: firstSearchResult.geometry.location.lng,\r\n        latitudeDelta: 0.01,\r\n        longitudeDelta: 0.01\r\n      })\r\n    } else {\r\n      Alert.alert(\"Whoops!\", \"This address doesn't exist. Are you sure it's correct?\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TextInput\r\n        placeholder=\"Where would you like to park?\"\r\n        variant=\"outlined\"\r\n        style={styles.searchInput}\r\n        onChangeText={(newText) => setSearchInput(newText)}\r\n        trailing={props => (\r\n          <IconButton onPress={updateLocation} icon={props => <Icon name=\"eye\" {...props} />} {...props} />\r\n        )}\r\n      />\r\n      <MapView\r\n        ref={mapRef}\r\n        style={styles.map}\r\n        provider={\"google\"}\r\n        showsUserLocation\r\n        showsMyLocationButton>\r\n        {markers.map((marker, index) => (\r\n          <Marker key={index}\r\n            coordinate={marker.coordinate}\r\n            icon={require('../../assets/ParkingPin.png')}\r\n          >\r\n            <Callout onPress={() => navigation.navigate('Parking', { ...marker })}>\r\n              <View>\r\n                <Text>{marker.title}</Text>\r\n                <Text>{marker.description}</Text>\r\n              </View>\r\n            </Callout>\r\n          </Marker>\r\n        ))}\r\n      </MapView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  map: {\r\n    width: '100%',\r\n    height: '80%',\r\n  },\r\n  searchInput: {\r\n    width: '80%',\r\n    height: '10%'\r\n  }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}