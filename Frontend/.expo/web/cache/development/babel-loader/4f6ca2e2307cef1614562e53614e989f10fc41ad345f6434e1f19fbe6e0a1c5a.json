{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport MapBox from \"./src/components/MapBox\";\nimport Parking from \"./src/components/Parking\";\nimport Profile from \"./src/components/Profile\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Welcome, Moshe!\"\n    }), _jsx(MapBox, {\n      navigation: navigation\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nI18nManager.allowRTL(false);\nexport default function App() {\n  var Tab = createBottomTabNavigator();\n  var HomeStack = createNativeStackNavigator();\n  function HomeStackScreen() {\n    return _jsxs(HomeStack.Navigator, {\n      children: [_jsx(HomeStack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Map\",\n        component: HomeScreen\n      }), _jsx(HomeStack.Screen, {\n        name: \"Parking\",\n        component: Parking\n      })]\n    });\n  }\n  return _jsx(NavigationContainer, {\n    style: styles.navigator,\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref2) {\n        var route = _ref2.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n            var iconName;\n            if (route.name === 'Home') {\n              iconName = focused ? 'map' : 'map-outline';\n            } else if (route.name === 'Account') {\n              iconName = focused ? 'person' : 'person-outline';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: '#036bfc',\n          tabBarInactiveTintColor: 'gray',\n          tabBarLabelStyle: {\n            fontWeight: 'bold',\n            fontSize: 12,\n            paddingBottom: 3\n          },\n          headerTitleStyle: {\n            fontWeight: 'bold',\n            fontSize: 27\n          },\n          headerStyle: {\n            borderBottomWidth: 0.2\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeStackScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Account\",\n        component: Profile\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 25,\n    width: '100%',\n    marginBottom: 15\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","I18nManager","Image","NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","Ionicons","MapBox","Parking","Profile","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","style","styles","container","children","header","allowRTL","App","Tab","HomeStack","HomeStackScreen","Navigator","Screen","options","headerShown","name","component","navigator","screenOptions","_ref2","route","tabBarIcon","_ref3","focused","color","size","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","fontWeight","fontSize","paddingBottom","headerTitleStyle","headerStyle","borderBottomWidth","create","flex","backgroundColor","alignItems","justifyContent","width","marginBottom"],"sources":["C:/projects/git-workspace/Parker/Frontend/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, I18nManager, Image } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nimport Ionicons from '@expo/vector-icons/Ionicons';\r\nimport MapBox from './src/components/MapBox';\r\nimport Parking from './src/components/Parking';\r\nimport Profile from './src/components/Profile';\r\n\r\nfunction HomeScreen({ navigation }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Welcome, Moshe!</Text>\r\n      <MapBox navigation={navigation} />\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nI18nManager.allowRTL(false);\r\n\r\nexport default function App() {\r\n  const Tab = createBottomTabNavigator();\r\n  const HomeStack = createNativeStackNavigator();\r\n\r\n  function HomeStackScreen() {\r\n    return (\r\n      <HomeStack.Navigator>\r\n        <HomeStack.Screen\r\n          options={{ headerShown: false }}\r\n          name=\"Map\"\r\n          component={HomeScreen}\r\n        />\r\n        <HomeStack.Screen\r\n          name=\"Parking\"\r\n          component={Parking}\r\n        />\r\n      </HomeStack.Navigator>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer style={styles.navigator}>\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n\r\n            if (route.name === 'Home') {\r\n              iconName = focused ? 'map' : 'map-outline';\r\n            } else if (route.name === 'Account') {\r\n              iconName = focused ? 'person' : 'person-outline';\r\n            }\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n          tabBarActiveTintColor: '#036bfc',\r\n          tabBarInactiveTintColor: 'gray',\r\n          tabBarLabelStyle: {\r\n            fontWeight: 'bold',\r\n            fontSize: 12,\r\n            paddingBottom: 3,\r\n          },\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n            fontSize: 27,\r\n          },\r\n          headerStyle: {\r\n            borderBottomWidth: 0.2,\r\n          }\r\n        })}\r\n      >\r\n        <Tab.Screen name=\"Home\" component={HomeStackScreen} />\r\n        <Tab.Screen name=\"Account\" component={Profile} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  header: {\r\n    fontWeight: 'bold',\r\n    fontSize: 25,\r\n    width: '100%',\r\n    marginBottom: 15,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}